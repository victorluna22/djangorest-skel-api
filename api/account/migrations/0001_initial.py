# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-26 16:39
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='StepAbstractUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('full_name', models.CharField(blank=True, max_length=120, null=True, verbose_name='Nome')),
                ('username', models.CharField(blank=True, max_length=120, null=True)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, unique=True, verbose_name='Email')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa se este usu\xe1rio pode acessar este site admin.', verbose_name='Membro da equipe')),
                ('is_active', models.BooleanField(default=True, help_text='Designa se este usu\xe1rio est\xe1 ativo.Desmarque esta op\xe7\xe3o ao inv\xe9s de deletar a conta.', verbose_name='Ativo')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('deleted', models.BooleanField(default=0, verbose_name=b'Deletado')),
            ],
            options={
                'verbose_name': 'usu\xe1rio do Stepbox',
                'verbose_name_plural': 'usu\xe1rios do Stepbox',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Rua')),
                ('number', models.CharField(blank=True, max_length=30, null=True, verbose_name='N\xfamero')),
                ('complement', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Complemento')),
                ('neighborhood', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Bairro')),
                ('cep', models.CharField(blank=True, max_length=9, null=True, verbose_name=b'CEP')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326, verbose_name='longitude/latitude')),
                ('deleted', models.BooleanField(default=0, verbose_name=b'Deletado')),
            ],
            options={
                'verbose_name': 'Endere\xe7o',
                'verbose_name_plural': 'Endere\xe7os',
            },
        ),
        migrations.CreateModel(
            name='AddressConsumerUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=0)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Address')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Cidade',
                'verbose_name_plural': 'Cidades',
            },
        ),
        migrations.CreateModel(
            name='DeviceUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dev_id', models.CharField(max_length=50, unique=True, verbose_name='Device ID')),
                ('reg_id', models.CharField(max_length=255, unique=True, verbose_name='Registration ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified date')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is active?')),
            ],
            options={
                'ordering': ['-modified_date'],
                'abstract': False,
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=b'images/', verbose_name='Imagem')),
            ],
        ),
        migrations.CreateModel(
            name='SendMail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_from', models.EmailField(max_length=150)),
                ('to', models.EmailField(max_length=150)),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField(blank=True, null=True)),
                ('template', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('result', models.TextField(blank=True, null=True)),
                ('context', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('acronym', models.CharField(max_length=2)),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
            },
        ),
        migrations.CreateModel(
            name='UserForgotPassword',
            fields=[
                ('hash', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdmUser',
            fields=[
                ('stepabstractuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Usu\xe1rio administrador',
                'verbose_name_plural': 'Usu\xe1rios administradores',
            },
            bases=('account.stepabstractuser',),
        ),
        migrations.CreateModel(
            name='ConsumerUser',
            fields=[
                ('stepabstractuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('birthday', models.DateField(blank=True, help_text='Insira sua data de nascimento.', null=True, verbose_name='Data de nascimento')),
                ('gender', models.CharField(blank=True, choices=[(b'M', 'Masculino'), (b'F', 'Feminino')], max_length=1, null=True, verbose_name='Sexo')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name=b'Telefone')),
                ('facebook', models.CharField(blank=True, max_length=255, null=True)),
                ('newsletter', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Usu\xe1rio consumidor',
                'verbose_name_plural': 'Usu\xe1rios consumidores',
            },
            bases=('account.stepabstractuser',),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('stepabstractuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_admin', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name': 'Usu\xe1rio da empresa',
                'verbose_name_plural': 'Usu\xe1rios da empresa',
            },
            bases=('account.stepabstractuser',),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.State'),
        ),
        migrations.AddField(
            model_name='address',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.City', verbose_name=b'Cidade'),
        ),
        migrations.AddField(
            model_name='stepabstractuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='stepabstractuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='userforgotpassword',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests_forgot', to='account.ConsumerUser'),
        ),
        migrations.AddField(
            model_name='deviceuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='account.ConsumerUser'),
        ),
        migrations.AddField(
            model_name='consumeruser',
            name='address',
            field=models.ManyToManyField(through='account.AddressConsumerUser', to='account.Address', verbose_name='Endere\xe7os'),
        ),
        migrations.AddField(
            model_name='addressconsumeruser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.ConsumerUser'),
        ),
    ]
